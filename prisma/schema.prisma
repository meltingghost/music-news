// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

generator jsonTypes {
  provider = "prisma-json-types-generator"
  output   = "/types"
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  directUrl  = env("DATABASE_URL_UNPOOLED")
  extensions = [vector]
}

model NewsArticle {
  id            Int                          @id @default(autoincrement())
  type          String
  title         String
  url           String                       @unique
  description   String?
  age           String?
  pageAge       DateTime?
  scheme        String?
  netloc        String?
  hostname      String?
  favicon       String?
  path          String?
  thumbnail     String?
  sourceId      Int
  source        Sources                      @relation(fields: [sourceId], references: [id])
  parsed        Boolean                      @default(false)
  parsedTitle   String?
  parsedContent String?
  parsedExcerpt String?
  deleted       Boolean                      @default(false)
  deletedReason String?
  vectorized    Boolean                      @default(false)
  embedding     Unsupported("vector(1536)")?
  storedImage   Boolean                      @default(false)
  cloudinaryUrl String?                      @unique
  filtered      Boolean                      @default(false)
  posted        Boolean                      @default(false)
  createdAt     DateTime                     @default(now())
  post          Post?
}

model Post {
  id                  Int         @id @default(autoincrement())
  slug                String      @unique
  title               String
  content             String
  createdAt           DateTime    @default(now())
  coverImage          String?
  excerpt             String?
  publishedAt         DateTime?
  article             NewsArticle @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId           Int         @unique
  titleTranslations   Json?
  contentTranslations Json?
  excerptTranslations Json?
}

model Sources {
  id        Int           @id @default(autoincrement())
  title     String
  url       String        @unique
  articles  NewsArticle[]
  updatedAt DateTime?     @updatedAt
}
